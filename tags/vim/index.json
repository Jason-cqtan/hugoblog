[{"content":"微服务定义  微服务架构即是采用一组小服务来构建应用的方法。\n每个服务运行在独立的进程中，不同服务通过一些轻量级交互机制来通信， 例如 RPC、HTTP 等。\n服务围绕业务能力来构建，并依赖自动部署机制来独立部署。\n 是SOA的一种实践。\n具有以下特点：\n 遵循kiss原则，高度可维护和可测试 低耦合 可独立部署交付 围绕业务能力进行组织 由一个小团队拥有 去中心化服务治理  单体/巨石架构到微服务的演进 生产率和复杂度关系 上图揭示了生产率和复杂度的一个关系。在复杂度较小时采用单体应用（Monolith）的生产率更高，复杂度到了一定规模时，单体应用的生产率开始急剧下降，这时对其进行微服务化的拆分才是合算的。\nv1.0 前端用户体验层主要是传统的服务端Web应用，库（library）是和应用一起运行在进程中，库的局部变化意味着整个应用的重新部署。\nv2.0 无线端接入，应用程序分出一部分专为无线端提供接口，BFF是Backend for Frontend的简称，中文翻译是为前端而开发的后端，它主要由前端团队开发（后端微服务一般由后端团队开发）。BFF可以认为是一种适配服务，将后端的微服务进行适配（主要包括聚合裁剪和格式适配等逻辑，dataset join），向无线端设备暴露友好和统一的API，方便无线设备接入访问后端服务。\n同时服务组件化，将原有库和应用绑定一起的进行拆分。通过服务来实现组件，意味着将应用拆散为一系列的服务运行在不同的进程中，那么单一服务的局部变化只需重新部署对应的服务进程。\nv3.0 上个版本很成功，但若业务复杂度进一步提升，存在些问题：\n 刚开始只有一个Mobile BFF，是个单块，但是无线研发团队在不断增加，分别对应多条业务线。根据康威法则，单块的无线BFF和多团队之间就出现不匹配问题，团队之间沟通协调成本高，交付效率低下。 Mobile BFF里头不仅有各个业务线的聚合/裁剪/适配和业务逻辑，还引入了很多跨横切面逻辑，比如安全认证，日志监控，限流熔断等。随着时间的推移，代码变得越来越复杂，技术债越堆越多，开发效率不断下降，缺陷数量不断增加。 Mobile BFF集群是个失败单点(Single Point of Failure)，严重代码缺陷或者流量洪峰可能引发集群宕机，所有无线应用都不可用。  为了解决上述问题，架构师经过思考决定在外部设备和内部BFF之间再引入一个新的角色~API Gateway，并进行如下调整：\n BFF按团队或业务线进行解耦拆分，拆分成若干个BFF微服务，每个业务线可以并行开发和交付各自负责的BFF微服务。 API Gateway网关（一般由独立框架团队负责运维）专注跨横切面(Cross-Cutting Concerns)的功能，包括：  路由，将来自无线设备的请求路由到后端的某个微服务BFF集群。 认证，对涉及敏感数据的API访问进行集中认证鉴权。 监控，对API调用进行性能监控。 限流熔断，当出现流量洪峰，或者后端BFF/微服务出现延迟或故障，网关能够主动进行限流熔断，保护后端服务，并保持前端用户体验可以接受。 安全防爬，收集访问日志，通过后台分析出恶意行为，并阻断恶意请求。    v4.0 随着业务线继续增加，满足内部业务同时对外提供开放api，引入前后分离架构，前端采用H5单页等技术给用户提供更好的体验。\nV4整体思路和V3类似，只是拓展了新的接入渠道:\n 引入面向第三方开放API的BFF层和配套的网关 引入面向H5应用的BFF层和配套的网关，支持前后分离和H5单页应用模式。  微服务架构并不是一蹴而就的。V4是一个比较完整的现代微服务架构，从外到内依次分为：端用户体验层-\u0026gt;网关层-\u0026gt;BFF层-\u0026gt;微服务层。整个架构层次清晰，职责分明，是一种灵活的能够支持业务不断创新的演化式架构。\n实施   组件服务化\n  微服务基础库（kit）\n  业务代码+kit依赖+第三方依赖\n  RPC + message queue 轻量级通讯机制\n  本质上等同于，多个微服务组合完成了一个完整的用户场景\n  按业务组织服务\n服务提供的能力和业务功能对应\nyou build it you run it，开发团队对软件在生产环境上运行负全部责任。\n  去中心化\n 数据 治理 技术  每个服务独享自身的数据存储设施（缓存、数据库等），不像传统应用共享一个缓存和数据库，这样有利于服务的独立性，隔离相关干扰\n  基础设施自动化\n CICD gitlab + GitLag hooks + kubernetes Testing: 测试环境、单元测试、api自动化测试 在线运行时：kubernetes，以及一系列Prometheus、ELK、Control Panel    可用性\u0026amp;兼容性设计\n 隔离 超时控制 限流 降级 重试 负载均衡    设计模式 说到设计模式，大家一般会想到，工厂、单例等24种基本设计模式，当然也会想到并发型模式，生产-消费者模式，线程池模式等，但是微服务中用到什么设计模式？AzureCAT模式和实践团队在Azure架构中心发布了九种新的设计模式。在设计和实现微服务时，这九种模式特别有用。微服务越来越变的流行是记录这些模式的动机。\n Ambassador(代表模式) 可用于以一种与语言无关的方式卸载常见客户端连接任务，如监视、记录、路由、安全（如 TLS）。 Anti-corruption layer (防损层模式) 实现了新旧应用程序之间的外观，以确保新应用程序的设计不受遗留系统依赖性的限制。使用此模式可确保应用程序的设计不受限于对外部子系统的依赖。 此模式最先由 Eric Evans 在 Domain-Driven Design（域驱动的设计）中描述。 Backends for Frontends (用于前端的后端模式) 创建单独的后端服务，供特定的前端应用程序或接口使用。 要避免为多个接口自定义一个后端时，此模式十分有用。后端为不同类型的客户端（如桌面和移动设备）创建单独的后端服务。这样，单个后端服务不需要处理各种客户端类型的冲突要求。通过分离客户特定的问题，这种模式可以帮助保持每个微服务的简单性。 Bulkhead（隔舱模式）之所以称为“隔舱”(Bulkhead)，是因为它类似于船体的分段区。 如果船体受到破坏，只有受损的分段才会进水，从而可以防止船只下沉。为每个工作负载或服务隔离关键资源，例如连接池，内存和CPU。通过使用隔板，单个工作负载（或服务）无法消耗所有资源，使其他资源匮乏。此模式通过防止由一个服务引起的级联故障来提高系统的弹性。 Gateway Aggregation（网关聚合模式） 使用网关可将多个单独请求聚合成一个请求。 当客户端必须向不同的后端系统发出多个调用来执行某项操作时，此模式非常有用使用网关可将多个单独请求聚合成一个请求。 当客户端必须向不同的后端系统发出多个调用来执行某项操作时，此模式非常有用。 Gateway Offloading（网关卸载方式） 将共享或专用服务功能卸载到网关代理。 此模式可以通过将共享服务功能（如 SSL 证书的使用）从应用程序的其他部分移动到网关，简化应用程序开发。 Gateway Routing（网关路由模式） 使用单个终结点将请求路由到多个服务。 如果希望在单个终结点上公开多个服务，并根据请求路由到适当的服务，则此模式非常有用。 Sidecar（挎斗模式 ） 将应用程序的帮助程序组件部署为单独的容器或进程，以提供隔离和封装。使用此模式还可以使用异构组件和技术来构建应用程序。 Strangler（绞杀者模式） 通过将特定的功能片断逐渐取代为新的应用程序和服务，逐步迁移旧系统。 随着旧系统的功能被替换，新系统最终将取代旧系统的所有功能，抑制旧系统并使其停用。通过逐步用新服务替换特定功能来支持增量迁移。  微服务架构也带来了一些挑战，这些模式可以帮助缓解这些挑战。设计模式（design pattern）是对软件设计中普遍存在（反复出现）的各种问题，所提出的解决方案。当然微服务中的云设计模式也是对微服务中普遍存在的问题，所提出的解决方案。\n不要低估了微服务带来的复杂性 拆分粒度的控制 其中一个跟他的名字类似，『微服务』强调了服务大小，实际上，有一些开发者鼓吹建立稍微大一些的，10-100 LOC服务组。尽管小服务更乐于被采用，但是不要忘了这只是终端的选择而不是最终的目的。微服务的目的是有效的拆分应用，实现敏捷开发和部署。\n分布式系统 微服务应用是分布式系统，由此会带来固有的复杂性。开发者需要在RPC或者消息传递之间选择并完成进程间通讯机制。更甚于，他们必须写代码来处理消息传递中速度过慢或者不可用等局部失效问题。当然这并不是什么难事，但相对于单体式应用中通过语言层级的方法或者进程调用，微服务下这种技术显得更复杂一些。\n分布式数据库 分区的数据库架构。商业交易中同时给多个业务分主体更新消息很普遍。这种交易对于单体式应用来说很容易，因为只有一个数据库。在微服务架构应用中，需要更新不同服务所使用的不同的数据库。使用分布式交易并不一定是好的选择，不仅仅是因为CAP理论，还因为今天高扩展性的NoSQL数据库和消息传递中间件并不支持这一需求。最终你不得不使用一个最终一致性的方法，从而对开发者提出了更高的要求和挑战。\n测试微服务 测试一个基于微服务架构的应用也是很复杂的任务。比如，采用流行的Spring Boot架构，对一个单体式web应用，测试它的REST API，是很容易的事情。反过来，同样的服务测试需要启动和它有关的所有服务（至少需要这些服务的stubs）。\n服务模块间的依赖，应用的升级有可能会波及多个服务模块的修改 微服务架构模式应用的改变将会波及多个服务。比如，假设你在完成一个案例，需要修改服务A、B、C，而A依赖B，B依赖C。在单体式应用中，你只需要改变相关模块，整合变化，部署就好了。对比之下，微服务架构模式就需要考虑相关改变对不同服务的影响。比如，你需要更新服务C，然后是B，最后才是A，幸运的是，许多改变一般只影响一个服务，而需要协调多服务的改变很少。\n对运维基础设施的挑战比较大 部署一个微服务应用也很复杂，一个分布式应用只需要简单在复杂均衡器后面部署各自的服务器就好了。每个应用实例是需要配置诸如数据库和消息中间件等基础服务。相对比，一个微服务应用一般由大批服务构成。例如，根据Adrian Cockcroft，Hailo有160个不同服务构成，NetFlix有大约600个服务。每个服务都有多个实例。这就造成许多需要配置、部署、扩展和监控的部分，除此之外，你还需要完成一个服务发现机制，以用来发现与它通讯服务的地址（包括服务器地址和端口）。传统的解决问题办法不能用于解决这么复杂的问题。接续而来，成功部署一个微服务应用需要开发者有足够的控制部署方法，并高度自动化。\n服务间进程通信 微服务必须使用进程间通信机制来交互。当设计服务的通信模式时，你需要考虑几个问题：\n 服务如何交互，网络延迟、消息格式、负载均衡和容错 每个服务如何标识API 如何升级API 以及如何处理部分失败。  微服务架构有两类IPC机制可选，异步消息机制和同步请求/响应机制。\nIPC（Inter-Process Communication）技术 现在有很多不同的IPC技术。\n服务之间的通信可以使用同步的请求/响应模式，比如基于HTTP的REST或者Thrift。\n另外，也可以选择异步的、基于消息的通信模式，比如AMQP或者STOMP。\n除此之外，还有其它的消息格式供选择，比如JSON和XML，它们都是可读的，基于文本的消息格式。\n当然，也还有二进制格式（效率更高）的，比如Avro和Protocol Buffer。\n这篇博客很好的比较了Thrift、Protocol Buffers、Avro三者的区别。\n服务之间的交互必须通过进程间通信（IPC）来实现。客户端和服务器之间有很多的交互模式，我们可以从两个维度进行归类。\n   一对一 一对多   同步 请求/响应    异步 通知 发布/ 订阅模式   请求/异步响应 发布/异步响应模式   • 请求/响应：一个客户端向服务器端发起请求，等待响应。客户端期望此响应即时到达。在一个基于线程的应用中，等待过程可能造成线程阻塞。\n• 通知（也就是常说的单向请求）：一个客户端请求发送到服务端，但是并不期望服务端响应。\n• 请求/异步响应：客户端发送请求到服务端，服务端异步响应请求。客户端不会阻塞，而且被设计成默认响应不会立刻到达。\n• 发布/ 订阅模式：客户端发布通知消息，被零个或者多个感兴趣的服务消费。\n• 发布/异步响应模式：客户端发布请求消息，然后等待从感兴趣服务发回的响应。\n每个服务都是以上这些模式的组合，对某些服务，一个IPC机制就足够了；而对另外一些服务则需要多种IPC机制组合。\n定义API API是服务端和客户端之间的契约。不管选择了什么样的IPC机制，重要的是使用某种交互式定义语言（IDL）来精确定义一个服务的API。甚至有一些关于使用API first的方法（API-first approach）来定义服务的很好的理由。在开发之前，你需要先定义服务的接口，并与客户端开发者详细讨论确认。这样的讨论和设计会大幅度提到API的可用度以及满意度。\nAPI定义实质上依赖于选择哪种IPC。如果使用消息机制，API则由消息频道（channel）和消息类型构成；如果选择使用HTTP机制，API则由URL和请求、响应格式构成。\n兼容性 一旦采用了微服务架构模式，那么在服务需要变更时我们要特别小心，服务提供者的变更可能引发服务消费者的兼容性破坏，时刻谨记保持服务契约（接口）的兼容性。一条普适的健壮性原则（伯斯塔尔法则，参考[6]）给出了很好的建议：\n Be conservative in what you send, be liberal in what you accept.\n 发送时要保守，接收时要开放。 按照伯斯塔尔法则的思想来设计和实现服务时，发送的数据要更保守，意味着最小化的传送必要的信息，接收时更开放意味着要最大限度的容忍冗余数据，保证兼容性。\n容错 Netfilix提供了一个比较好的解决方案，具体的应对措施包括：\n• 网络超时：当等待响应时，不要无限期的阻塞，而是采用超时策略。使用超时策略可以确保资源不会无限期的占用。\n• 限制请求的次数：可以为客户端对某特定服务的请求设置一个访问上限。如果请求已达上限，就要立刻终止请求服务。\n• 断路器模式（Circuit Breaker Pattern）：记录成功和失败请求的数量。如果失效率超过一个阈值，触发断路器使得后续的请求立刻失败。如果大量的请求失败，就可能是这个服务不可用，再发请求也无意义。在一个失效期后，客户端可以再试，如果成功，关闭此断路器。\n• 提供回滚：当一个请求失败后可以进行回滚逻辑。例如，返回缓存数据或者一个系统默认值。\nNetflix Hystrix是一个实现相关模式的开源库。如果使用JVM，推荐考虑使用Hystrix。而如果使用非JVM环境，你可以使用类似功能的库。\n参考  https://microservices.io/index.html https://blog.csdn.net/mindfloating/article/details/51221780 https://www.cnblogs.com/dadadechengzi/p/9373069.html https://www.cnblogs.com/viaiu/archive/2018/11/24/10011376.html https://www.cnblogs.com/lfs2640666960/p/9543096.html https://mp.weixin.qq.com/s/L6OKJK1ev1FyVDu03CQ0OA https://www.bookstack.cn/read/API-design-guide/API-design-guide-02-面向资源的设计.md https://www.programmableweb.com/news/how-to-design-great-apis-api-first-design-and-raml/how-to/2015/07/10 http://www.dockone.io/article/394 https://www.jianshu.com/p/3c7a0e81451a https://www.jianshu.com/p/6e539caf662d https://my.oschina.net/CraneHe/blog/703160  ","description":"微服务架构即是采用一组小服务来构建应用的方法。每个服务运行在独立的进程中，不同服务通过一些轻量级交互机制来通信， 例如 RPC、HTTP 等。服务围绕业务能力来构建，并依赖自动部署机制来独立部署。","id":0,"section":"posts","tags":["架构"],"title":"微服务","uri":"https://betterme.xin/posts/2021-08/microservices/"},{"content":"1  str := \u0026#34;\u0026#34;   方法一：使用+\n1  str = \u0026#34;hello\u0026#34; + \u0026#34; world!\u0026#34;   方法二：使用fmt包Sprintf方法\n1  str = fmt.Sprintf(\u0026#34;abc%d\u0026#34;, 123)   方法三：使用string包Join方法\n1  str = strings.Join([]string{\u0026#34;123\u0026#34;, \u0026#34;456\u0026#34;}, \u0026#34;\u0026#34;)   方法四：使用buffer包\n1 2 3 4 5  var buffer bytes.Buffer for i := 0; i \u0026lt; 1000; i++ { buffer.WriteString(\u0026#34;a\u0026#34;) } str = buffer.String()   ","description":"golang 字符串拼接","id":1,"section":"posts","tags":["Go"],"title":"字符串拼接","uri":"https://betterme.xin/posts/2021-05/go-snippets_01/"},{"content":"前言 这里发现别人的弱点主要目的不是为了去攻击别人，而是为了防止误伤，更好的与别人交往，减少在生活中产生不必要的麻烦。\n弱点分很多种，今天我们所谈的弱点，并不是一个人的隐私或者Ta的秘密。而是大家都会有的弱点，所有人都有擅长和不擅长的事情，不擅长的事情就是你的弱点，我们在与别人交往中，应该尽可能的避免去碰触别人的弱点。比如你经常在别人不舒服的地方，围绕这个话题不停的讲，别人肯定很讨厌你。如果你能很好了解别人弱点的话，基本上就不会有人际关系上的问题。\n所谓的情商高绝不是对所有人都“温柔”，而是对不同的对象采用不同的沟通方式。而且通过了解弱点也可以间接知道别人的优点。\n社交风格 性格分析领域，有个非常主流的分析方法 \u0026ndash; 社交风格\n现在很多大公司的面试，还有新人培训，以及公司的运营上，都会使用这种方法去分析员工的性格，进而了解每个员工他们适合做什么和不适合做什么，所谓的发挥长处避开弱点。\n这个分析法是1968年由美国心理学家“戴维·梅里尔”提出，理论主要通过“自主性”、“响应性”两个参数，将人的社交风格分为四类。\n  自主性\n一个人是否愿意主动表达自己的意见，自主性高就是喜欢愿意表达，自主性低的人就是不太喜欢表达 ，也就是我们所说的喜欢说话和不喜欢说话\n  响应性\n一个人是否情绪化，响应性高的人情绪化越明显，情感越容易外露，相反响应性低，这人看上去就比较冷酷冷静\n  驾驭型 很愿意表达且很理性，自我为中心很理性。进取心行动力很强，具有领导者气质，能够独立完成工作，有一定控制欲和专制，通常不会体验过程通常只重视效率和结果。公司领导层，个体经营者这种人比较多。\n非常不喜欢说话不够简洁，最喜欢听到的一句话：从结论而言。不喜欢优柔寡断，根本上而言，他们喜欢驾驭、控制、专制，在Ta们周围不要表现太有反抗性。如何相处，控制权交给他，不咋谈论感性，也不要过于强硬表达自己的意见\n表现型 愿意表达且很感性，不理性很感性。很容易喜怒哀乐，而且很愿意表达，在人群中非常的突出，表现欲极强，希望获得别人的肯定，喜欢发朋友圈，发帖子之类的，非常希望别人来关注点赞这样的。比较适合做明星，演说家或者网红。有时候会表现出比较容易冲动，无法控制自己的情感，情感波动比较明显，开心时狂喜，不开心就非常容易悲伤落泪的那种；生气的时候那真是暴跳如雷。\n通常认为表现型中女性比较多，可能是女性情感波动比较明显。非常讨厌规矩，讨厌一成不变，很理性的东西，很理论的东西。在Ta们周围不要限制他们的“发挥”，开心跟着开心，不开心就跟着不开心，不要说太多的道理，更多只在乎情感，不过这种喜怒哀乐不会持续时间很长，所以你也不必太认真。\n平易型 不愿意表达很感性。同理心非常强，设身处地为别人着想，很好的倾听者，性格温厚，很容易融入群体愿意帮助别人，标准型好人，很少与人发生冲突，不会选边站，所有女的都是美女，男的都是帅哥，所有东西都好吃。非常讨厌被要求说出自己的想法，其实他们没想法。\n除此之外不适合做团队领导，领导有时候必须做出一些残酷的选择和决定，平易型的老板是做不出像裁员这种事，他会自己吃糠咽菜也要养员工，通常这种领导团队很难成功做大。成功的定义分很多种，所有人都是好朋友的话也可能算是一种成功。\n分析型 不愿意表达很理性。非常努力认真默无闻的人，很容易出天才，喜欢一个人待着，研究自己研究的东西，做事不紧不慢，话很少，很适合做创作艺术，画家之类的。活在自己的世界，不追求效率也不求助他人，通常工作的结果质量都蛮高。\n不重效率所以不太适合在高效率团队工作，最好做些顾问参谋策划之类的，就是对时间要求并不是很严格，只要有知识储备有头脑的话就可以的工作是适合他们的。\n其他 有的人可能跨界，两种都有；还有一种上面四种都不属于，属于“平衡型”，说明这个人对自己的情绪控制也好，对于自己主张控制也好还有听取意见各方面都很非常完美\n以后我们以上帝视角来看待周围的人，先分类，对于不同类的人采用不同的沟通方式，这样的话你在人际关系上就游刃有余了。\n参考 YouTube播主老高與小茉 Mr \u0026amp; Mrs Gao会员专享《如何快速發現別人的“弱點” 》\n","description":"","id":2,"section":"notes","tags":["社交风格","情商"],"title":"上帝视角-如何快速发现别人的弱点","uri":"https://betterme.xin/notes/2021-2/social-style/"},{"content":"块 1 2 3 4 5 6 7 8 9 10  ary = [1,2,3] ary.each do |item| # 这里就是块 puts item end (1..5).each { |i| puts 2 * i } # { |i| puts 2 * i } 为块   变量 局部变量 块中或方法内变量，以数字字母下划线开头，块中和方法内可用\n实例变量 类中以@开头，类中方法内共享\n类变量 类中以@@开头，类实例后的对象间共享\n全局变量 $开头，跨类使用\n常量 以大写命名\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  class User REGION = \u0026#34;china\u0026#34; $time = Time.now #全局变量，跨类使用 @@id= 0 #类变量，类的属性,实例对象中共享 @age = 18 # 实例变量,类中所有方法内共享 def initialize (name,age=18) # name、age为局部变量,仅在该方法内使用 print \u0026#34;我是局部变量name\\n\u0026#34; @@id += 1 @name = name @age = age end def display puts \u0026#34;id:#{@@id}\u0026#34; puts \u0026#34;name:#{@name}\u0026#34; puts \u0026#34;age:#{@age}\u0026#34; puts \u0026#34;region:#{REGION}\u0026#34; puts \u0026#39;-------\u0026#39; end def test puts \u0026#34;同类方法调另外一个方法定义的实例变量@age,#{@age}\u0026#34; puts \u0026#34;调用常量REGION:#{REGION}\u0026#34; end end class OtherClass def nowtime print \u0026#34;我是全局变量$time，可以跨类访问，值为#{$time}\\n\u0026#34; end end user1 = User.new(\u0026#34;Jason\u0026#34;) user1.display user1.test user2 = User.new(\u0026#39;Cherry\u0026#39;,19) user2.display timeobj = OtherClass.new timeobj.nowtime   对象 ruby内一切皆对象\n","description":"介绍块、变量、对象相关","id":3,"section":"posts","tags":["ruby"],"title":"变量、块、对象","uri":"https://betterme.xin/posts/2021-01/ruby03/"},{"content":"配置工作 测试ruby，可直接在irb中测试，定义irb配置文件~/.irbrc，去掉缩进和多余的提示，看着清爽\n1 2  IRB.conf[:PROMPT_MODE] = :SIMPLE IRB.conf[:AUTO_INDENT_MODE] = false   打印和注释 打印  puts\nruby中所有方法()，可带可不带，会自动识别，puts打印并自动附加\\n换行  示例：\n puts \u0026ldquo;hello world\u0026rdquo;\nputs(\u0026ldquo;hello word\u0026rdquo;)\n  print\n只打印不换行  示例：\n print \u0026ldquo;hello world\u0026rdquo;\n 注释 使用# 注释\n 单行注释  1  puts \u0026#34;hello world\u0026#34; # 打印hello world    多行注释  1 2 3 4  #多 #行 #注 #释   1 2 3 4 5  =begin puts \u0026#34;hello world\u0026#34; =    here document\n用于定义多行字符串，以\u0026lt;\u0026lt;\u0026lt;开头，跟上标识，结尾处行首跟上标识  语法：\n1 2 3  str = \u0026lt;\u0026lt;\u0026lt;标识 标识   示例：\n1 2 3 4  \u0026lt;\u0026lt;\u0026lt;EOC EOC    由``包裹的，执行``内命令  示例：\n print `ls -alf `\n 字符串   单引号\nruby不会对单引号字符串进行插值操作。单引号字符串的用处在于它们真的就是字面值，只包含你输入的字符\n  双引号\n会解析表达式#{}内的变量\n  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  var = \u0026#39;test\u0026#39; puts \u0026#34;#{var}\u0026#34; # 重复3次 s = \u0026#39;a\u0026#39; s *= 3 # 读取索引下字符 s = \u0026#39;abc\u0026#39; puts s[0] # 转小写返回副本 s = \u0026#34;HELLO\u0026#34; s.downcase # 转小写返回副本并更改原来的 s = \u0026#39;HELLO\u0026#39; s.downcase! # 追加 s = \u0026#39;a\u0026#39; s \u0026lt;\u0026lt; \u0026#39;b\u0026#39; \u0026lt;\u0026lt; \u0026#39;c\u0026#39;   拼接 支持 +，但使用concat性能更佳，机制不一样,+=会赋值原来文本再尾部添加，而concat直接在子串尾部添加\n分别使用下面demo，感受下时间，都是50000次重复追加xxx|，第二种concat明显就很快\n1 2 3 4 5  box = \u0026#39;\u0026#39; 50000.times{box+=\u0026#34;xxx|\u0026#34;} box = \u0026#39;\u0026#39; 50000.times{box.concat(\u0026#34;xxx|\u0026#34;)}   数组、hash、range 数组 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  # 创建数组的几种方式 nums = Array.[](1,2,3,4,5) nums = Array[1,2,3,4,5] nums = Array(0..9) nums = [1,2,3,4,5] ary = [`ls -alf`,\u0026#39;jason\u0026#39;\u0026#39;] # 只打印值 ary.each do |item| puts item end # 打印索引和值 ary.each_with_index do |val,index| puts index,val end # 定义数组长度 ary = Array.new(14) # 定义数组并使用相同元素 ary = Array.new(3,\u0026#39;nice\u0026#39;) # 生成时使用计算后结果填充 ary = Array.new(10){|e|e*=10}   hash、关联数组 1 2 3 4 5 6  base_info = {\u0026#34;name\u0026#34;=\u0026gt;\u0026#34;jason\u0026#34;,\u0026#34;email\u0026#34;=\u0026gt;\u0026#34;uniqueacheng@gmal.com\u0026#34;} symbols_format = {:name=\u0026gt;\u0026#34;jason\u0026#34;,:email=\u0026gt;\u0026#34;uniqueacheng@gmal.com\u0026#34;} symbols_sample = {name:\u0026#34;jason\u0026#34;,email:\u0026#34;uniqueacheng@gmal.com\u0026#34;} base_info.each do |key,val| puts \u0026#34;key:#{ key},val: #{val}\u0026#34; end   range (start..end) 两个.包含end值\n(start\u0026hellip;end) 三个.不包含end值\n1 2 3 4  # 生成8位随机字母 (\u0026#39;a\u0026#39;..\u0026#39;z\u0026#39;).to_a.sample(8).join # bar bas bat bau (\u0026#39;bar\u0026#39;..\u0026#39;bau\u0026#39;).to_a   其他参考 只例举了非常基础的东西，更多可参考官方ruby api 文档\n","description":"Ruby基础语法","id":4,"section":"posts","tags":["ruby"],"title":"Ruby基础语法","uri":"https://betterme.xin/posts/2021-01/ruby02/"},{"content":"ruby 始于1993年，由日本计算机科学家松本行弘（Matz）设计并开发，是一种面向对象，动态语言，Ruby于2006年为TIOBE获选为年度编程语言；\n前言 现在学习Ruby似乎已经过时，现在主要流行Python、Go、NodeJs；\n在我看来，做技术的，不应该只限于某种语言，至少应该掌握3种语言，生计语言，个人使用语言；语言是工具，多掌握工具，多些解决问题的途径，多学习了解并不是坏事。\n本系列主要是学习ruby、ruby on rails相关记录，不定时更新，从陌生到入门:)\n安装 macOs  使用homebrew一键安装   brew install ruby\n  使用官方自带管理器rvm （推荐）\n用Ta能安装多个 版本的ruby，随时切换，而homebrew只能安装一个版本  可能会遇到的问题：\n0.zsh: command not found: gpg2\n解决：使用brew安装 brew install gpg2\n1  gpg --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB   1.提示没找到秘钥\n解决：终端请挂代理\n验证并使用 确认输入命令有输出\n 重启终端 rvm \u0026ndash;help gem \u0026ndash;version     命令 说明     rvm Ruby Version Manager   gem 包管理器 RubyGems 提供的 gem 命令   irb ruby在控制台的交互式解析器    替换系统自带ruby 1 2 3 4  rvm install 3.0.0 rvm use 3.0.0 # 创建软链接 ln -s 安装目录 软链接目录   测试 1 2  !#/usr/local/bin/ruby puts (\u0026#34;欧耶，hello world!\u0026#34;)   ","description":"初识ruby，在mac上安装","id":5,"section":"posts","tags":["ruby"],"title":"安装ruby","uri":"https://betterme.xin/posts/2021-01/ruby01/"},{"content":"很想写关于hbo的文章，但了解不够清楚，迟迟不敢动手，经过我零星了解归类分析后，刚终于弄明白了如何订阅菲律宾的hbo go，下面分享一下。\n主要原因是相比netflix，限制太多，观影体验相对糟糕，以至于很少人订阅和合租。\n什么是hbo HBO（Home Box Office的缩写，直译为家庭票房）是一个美国的付费有线和卫星联播网，为华纳媒体公司所拥有，由Home Box Office公司负责营运。\n更多参考维基百科 -\u0026gt; https://zh.wikipedia.org/wiki/HBO\n以我不完全了解，目前（2020年11月，以下目前同指）hbo分两种，hbo Max和hbo Asia。\n hbo Max  美国运营，第一时间提供最新美剧，电影资源，不支持中文字幕。\n hbo Asia  hbo 亚洲，运营总部在新加坡，观看时提供中文字幕，但新上架片源相比 max 会延迟8小时或更久\n在香港订阅的只能在香港观看；\n在菲律宾订阅的，手机、平板使用对应地区软件和节点登录菲律宾账号观看，网页上除开香港节点，其他亚洲节点（新加坡、台湾）可观看，安卓tv上不限制节点，apple tv不支持。\n为什么要使用hbo 第一时间追踪到hbo上的好莱坞电影、美剧、韩剧、体育赛事等等，免去找资源。让心心念变为立即体验。\n比如《切尔诺贝利》、《小丑》、《西部世界》、《权利的游戏》、《瑞克和莫提》、《哈利波特系列》等热门剧集都在hbo可看，这不《黑暗元素》第二季马上就在hbo上回归了\n如何才能使用 首先先确认观影需求及英语能力\n  观影需求\n如果你是一位狂热追剧者，想第一时间看到想看的剧或电影，又有零钱潇洒，不要犹豫，立刻马上订阅！又或许，我就想体验下这种流媒体、节点流量太多待消耗，没问题，go ahead.\n如果不那么狂热，稍微等等国内放出资源也能接受，又不想花钱，也没有科学上网需求，那就不用订阅了\n  英语能力\n如果你的英语等级比较高，能看懂英语字幕和听他们讲话毫不费力，订阅max。\n如果你的英语等级不高，暂且需要中文或繁体中文字幕，那就hbo go\n  开始订阅 在这之前得准备些东西，曾分享过如何使用netflix，现在订阅hbo也不例外，都不支持在中国观看，必要的就是科学上网服务和外币信用卡，下面某些术语及联动操作认为你都已知晓\n如果订阅max，挂美国节点，打开官网注册账号，并绑定外币信用卡，over。\n订阅hbo go 主要介绍香港和菲律宾区，首先确认好订阅哪个地区的，香港节点容易找，菲律宾节点难寻，但菲律宾区的价格相对香港区更便宜。另外spotify菲律宾区也挺便宜的。\n  香港hbo go\n 注册\n挂香港代理，打开https://www.hbogoasia.com/，打开后会自动跳转https://www.hbogoasia.hk/，首页下方显示now TV和now E，now TV提供给香港本地电视盒子用户，需要向電訊盈科媒體有限公司订阅；而now E可直接网页注册；苹果端，需要香港apple id，在apple store下载hbo go软件后注册；安卓则是google play store，谷歌账号区域改为香港，在google play store下载hbo go软件后注册。 订阅\n选择now E方式订阅，打开https://www.nowe.com/choose-plan，你会看到很多套餐包，“英超及西甲賽事”，“歐洲聯賽冠軍盃 \u0026amp; 歐霸盃”，“睇戲煲劇組合”\u0026hellip;\n这时根据自己实际情况订阅，以下以订阅“睇戲煲劇組合”为例，在注册账号时候，你已绑定外币信用卡，这时点击订阅，每月港币78，会立即扣费并订阅。 网页使用\n挂香港节点，打开https://www.hbogoasia.hk/，选择now E方式登录，登录账号观看。登录后自动绑定设备，限制5个设备，且两个设备同时在线观看。最多支持离线下载20个剧集用于离线观看；同一台电脑上，使用两个浏览器观看就算是2个设备，虽然只是一台电脑。 手机或电视使用\n手机下载香港区的hbo go，登录后使用。电视端可通过扫码登录绑定设备，安卓TV的软件不好找，我找到了，如有需要，call me maybe？ 其他设置\n订阅相关的在https://www.nowe.com/上设置，观看相关的在https://www.hbogoasia.hk 或软件上设置    菲律宾hbo go\n 注册\n这个得手机商店注册，网页不支持注册。苹果端，需要菲律宾apple id，在apple store下载hbo go软件后注册；安卓则是google play store，谷歌账号区域改为菲律宾，在google play store下载hbo go软件后注册。 订阅\n无其他套餐包可选，订阅扣费扣的商店绑定的外币信用卡 使用\n菲律宾区的使用，比较特殊，和香港的互斥，只要不是香港节点，都可以使用。手机或平板端，下载除开香港的软件后，就只能用那个区的节点观看。比如，下载了台湾版的hbo go，只能用台湾节点登录菲律宾账号观看；网页上，打开https://www.hbogoasia.com/，会根据当前节点区域，自动跳转，只要不是香港节点，其他区可看，而电视端居然没有限制。 其他设置\n订阅设置在对应商店，观看相关的在https://www.hbogoasia.com 或软件上设置    与netflix对比  设备限制     流媒体 说明     netflix 最高4人同时在线，不限制设备   hbo go 最高2人同时在线，限制严格     片源     流媒体 说明     netflix 不同区节点片源不一样   hbo go 片源一样，且新上架片源会延迟于hbo Max 8小时或更久     直播     流媒体 说明     netflix 暂不支持   hbo go 支持5个不同频道的直播，主要是电影，动画片，美剧轮播     中文字幕     流媒体 说明     netflix 不同区片源字幕支持不一样   hbo go 基本支持，界面只有繁体中文，字幕有简体中文     画质及音效     流媒体 说明     netflix 最高支持4k，杜比视界和声音   hbo go 最高支持2k，（杜比视界和声音的支持待考证，本人目前暂没有设备可验证）    其他 上个月前曾订阅过香港区的now E套餐，16号到期，取消订阅后，按理应该是16后不能观看，居然还能观看持续到今天上午（刚为了演示，点击了订阅，网速太快，又订阅了一个月！😳，吐槽没有再次确认的界面！）。下个月持续关注下，看取消订阅后还能不能继续观看，如果还能，说明可以捡趴活了~\n！！经过几个月的测试，验证bug依然存在，也就是订阅香港now e套餐一个月，下月不继续订阅，订阅期外仍然能够继续观看\n参考 官网faq：https://www.hbogoasia.hk/#help/faq\n","description":"了解hbo，讲解菲律宾区hbo go和香港hbo go区别，如何订阅，还有使用体验","id":6,"section":"posts","tags":["hbo"],"title":"HBO GO","uri":"https://betterme.xin/posts/2020-10/hbo/"},{"content":"laradock 是一个利用docker容器编排，提供一系列包括不仅限于php环境，在不“污染”本地环境下，将开发环境搭建在docker内；需执行各种命令时，进入workspace容器内执行，workspace可以类比为电脑里的电脑，其他容器同理\n官网：https://laradock.io/\ngithub:https://github.com/laradock/laradock\n可替换方案\n homestead valet(仅支持mac) 在mac上安装部署多版本php环境  使用laradock驱动多应用 准备  docker桌面客户端，安装后主要使用docker，docker-compose命令 docker 基础知识 laradock 项目包  目录结构规划  projects\n\u0026ndash; laradock\n\u0026ndash; projectA\n\u0026ndash; projectB  开始部署 1 2 3 4 5  cd projects git clone https://github.com/laradock/laradock cd laradock cp env-example .env vim .env   按需更改.env配置，部分参数说明\n APP_CODE_PATH_HOST 相对laradock挂载宿主目录\nAPP_CODE_PATH_CONTAINER 容器内安装软件目录\n 部署lnmp 1  docker-compose up -d nginx mysql   在不指定php-fpm和workspace前提下，执行命令读取.env文件内php版本变量值（7.3）创建php-fpm容器，默认创建workspace以及docker in docker容器\n若部署lamp环境，则为docker-compose up -d apache mysql\n虚拟主机设置在对应服务器sites目录下新增即可，比如部署lamp环境，虚拟主机设置在laradock/apache2/sites目录下\n访问镜像很慢或构建失败，主要是镜像资源访问慢，解决方法：  更改.env CHANGE_SOURCE=true 更改使用阿里镜像 挂代理，修改.env CHANGE_SOURCE=false。让docker客户端自动获取代理，不建议再修改docker桌面端代理连接本地代理 在国外vps上安装好后，打包镜像，下载到本地导入（万不得已）  如何重启服务  重启镜像 docker-compose restart [nginx | apache2 | caddy] 进入容器内，使用服务的重启命令，例如  1 2 3  docker-compose exec nginx bash # 或者使用 docker exec -it [容器名|容器id] bash 进入容器 nginx -s reload   更换容器版本，如mysql、php 修改.env文件，重新构建容器；注意php有两个服务\n php-fpm 用于web应用的php版本，对应容器php-fpm workspace容器里面的php-cli版本，用于控制台应用的版本，对应容器workspace  重构docker-compose build [容器名]\n重构所有服务 docker-compose build\n如何添加php扩展  开启已编译但尚未打开的扩展，修改.env配置，找到对应扩展，更改值为true，重新构建对应容器 添加未编译的扩展：进入容器，pecl编译安装  laradock 构建原理 使用docker-compose命令会读取docker-compose.yml文件，docker-compose.yml又读取.env文件变量值，一般只修改.env就可更改容器功能。若要添加docker-compose.yml没有的服务，得亲自编写docker-compose.yml了，具体可参考docker相关文档\n了解更多 laradock文档 -\u0026gt; https://laradock.io/documentation/\ndocker从入门到实践 -\u0026gt; https://yeasy.gitbooks.io/docker_practice/content/\n","description":"","id":7,"section":"posts","tags":["php","laradock","docker"],"title":"小玩Laradock","uri":"https://betterme.xin/posts/2020-04/laradock/"},{"content":"vimtutor讲解 简单总结下vim官方内置教程讲解要点。\n第一讲   光标在屏幕文本中的移动既可以用箭头键，也可以使用 hjkl 字母键。\nh (左移) j (下行) k (上行) l (右移)\n  欲进入 Vim 编辑器(从命令行提示符)，请输入：vim 文件名 \u0026lt;回车\u0026gt;\n  欲退出 Vim 编辑器，请输入 \u0026lt;ESC\u0026gt; :q! \u0026lt;回车\u0026gt; 放弃所有改动。\n或者输入 \u0026lt;ESC\u0026gt; :wq \u0026lt;回车\u0026gt; 保存改动。\n  在正常模式下删除光标所在位置的字符，请按： x\n  欲插入或添加文本，请输入：\ni 输入欲插入文本 \u0026lt;ESC\u0026gt; 在光标前插入文本 A 输入欲添加文本 \u0026lt;ESC\u0026gt; 在一行后添加文本    特别提示：按下 \u0026lt;ESC\u0026gt; 键会带您回到正常模式或者撤消一个不想输入或部分完整\n的命令。\n第二讲   欲从当前光标删除至下一个单词，请输入：dw\n  欲从当前光标删除至当前行末尾，请输入：d$\n  欲删除整行，请输入：dd\n  欲重复一个动作，请在它前面加上一个数字，例如：2w\n  在正常模式下修改命令的格式是：\noperator [number] motion\n其中：\noperator - 操作符，代表要做的事情，比如 d 代表删除\n[number] - 可以附加的数字，代表动作重复的次数\nmotion - 动作，代表在所操作的文本上的移动，例如 w 代表单词(word)，\n$ 代表行末等等。\n  欲移动光标到行首，请按数字0键：0\n  欲撤消以前的操作，请输入：u (小写的u)\n欲撤消在一行中所做的改动，请输入：U (大写的U)\n欲撤消以前的撤消命令，恢复以前的操作结果（反撤销），请输入：CTRL-R\n  第三讲   要重新置入已经删除的文本内容，请按小写字母 p 键。该操作可以将已删除\n的文本内容置于光标之后。如果最后一次删除的是一个整行，那么该行将置\n于当前光标所在行的下一行。\n  要替换光标所在位置的字符，请输入小写的 r 和要替换掉原位置字符的新字\n符即可。\n  更改类命令允许您改变从当前光标所在位置直到动作指示的位置中间的文本。\n比如输入 ce 可以替换当前光标到单词的末尾的内容；输入 c$ 可以替换当\n前光标到行末的内容。\n  更改类命令的格式是：\nc [number] motion\n  第四讲   CTRL-G 用于显示当前光标所在位置和文件状态信息。\nG 用于将光标跳转至文件最后一行。\n先敲入一个行号然后输入大写 G 则是将光标移动至该行号代表的行。\ngg 用于将光标跳转至文件第一行。\n  输入 / 然后紧随一个字符串是在当前所编辑的文档中正向查找该字符串。\n输入 ? 然后紧随一个字符串则是在当前所编辑的文档中反向查找该字符串。\n完成一次查找之后按 n 键是重复上一次的命令，可在同一方向上查\n找下一个匹配字符串所在；或者按大写 N 向相反方向查找下一匹配字符串所在。\nCTRL-O 带您跳转回较旧的位置，CTRL-I 则带您到较新的位置。\n  如果光标当前位置是括号(、)、[、]、{、}，按 % 会将光标移动到配对的括号上。\n  在一行内替换头一个字符串 old 为新的字符串 new，请输入 :s/old/new\n在一行内替换所有的字符串 old 为新的字符串 new，请输入 :s/old/new/g\n在两行内替换所有的字符串 old 为新的字符串 new，请输入 :#,#s/old/new/g\n在文件内替换所有的字符串 old 为新的字符串 new，请输入 :%s/old/new/g\n进行全文替换时询问用户确认每个替换需添加 c 标志 :%s/old/new/gc\n  第五讲   :!command 用于执行一个外部命令 command。\n请看一些实际例子：\n(MS-DOS) (Unix)\n:!dir :!ls - 用于显示当前目录的内容。\n:!del FILENAME :!rm FILENAME - 用于删除名为 FILENAME 的文件。\n  :w FILENAME 可将当前 VIM 中正在编辑的文件保存到名为 FILENAME 的文\n件中。\n  v motion :w FILENAME 可将当前编辑文件中可视模式下选中的内容保存到文件\nFILENAME 中。\n  :r FILENAME 可提取磁盘文件 FILENAME 并将其插入到当前文件的光标位置\n后面。\n  :r !dir 可以读取 dir 命令的输出并将其放置到当前文件的光标位置后面。\n  第六讲   输入小写的 o 可以在光标下方打开新的一行并进入插入模式。\n输入大写的 O 可以在光标上方打开新的一行。\n  输入小写的 a 可以在光标所在位置之后插入文本。\n输入大写的 A 可以在光标所在行的行末之后插入文本。\n  e 命令可以使光标移动到单词末尾。\n  操作符 y 复制文本，p 粘贴先前复制的文本。\n  输入大写的 R 将进入替换模式，直至按 \u0026lt;ESC\u0026gt; 键回到正常模式。\n  输入 :set xxx 可以设置 xxx 选项。一些有用的选项如下：\n\u0026lsquo;ic\u0026rsquo; \u0026lsquo;ignorecase\u0026rsquo; 查找时忽略字母大小写\n\u0026lsquo;is\u0026rsquo; \u0026lsquo;incsearch\u0026rsquo; 查找短语时显示部分匹配\n\u0026lsquo;hls\u0026rsquo; \u0026lsquo;hlsearch\u0026rsquo; 高亮显示所有的匹配短语\n选项名可以用完整版本，也可以用缩略版本。\n  在选项前加上 no 可以关闭选项： :set noic\n  第七讲   输入 :help 或者按 \u0026lt;F1\u0026gt; 键或 \u0026lt;Help\u0026gt; 键可以打开帮助窗口。\n  输入 :help cmd 可以找到关于 cmd 命令的帮助。\n  输入 CTRL-W CTRL-W  可以使您在窗口之间跳转。\n  输入 :q 以关闭帮助窗口\n  您可以创建一个 vimrc 启动脚本文件用来保存您偏好的设置。\n  当输入 : 命令时，按 CTRL-D 可以查看可能的补全结果。\n按 \u0026lt;TAB\u0026gt; 可以使用一个补全。\n  remember 纸上得来终觉浅，绝知此事要躬行。\nend vim 教程到此就结束了。本教程只是为了简明地介绍一下 Vim 编辑器，但已足以让您很容易使用这个编辑器了。毋庸质疑，vim还有很多很多的命令，本教程所介绍的距离完整的差得很远。所以您要精通的话，还望继续努力哦。下一步您可以阅读Vim 的用户手册，使用的命令是： :help user-manual\n","description":"vim从陌生到入门-vimtutor简单总结","id":8,"section":"posts","tags":["vim"],"title":"vimtutor简单总结","uri":"https://betterme.xin/posts/2020-03/vim01/"},{"content":"上一篇博客已经是19年12月底了，距离现在过了一个多月，过去的一个月中，回老家过年，2月1号回重庆，然后上了两周远程班，王者荣耀用鲁班从黄金打到星耀；\n看了几部美剧（安眠书店、陌生人、致命钥匙、诸神的黄昏\u0026hellip;），几部电影（急速车王、1917、缩小人生、美国甜心小姐、致所有我曾爱过的男孩\u0026hellip;）；\n越来越懒散，完全不想学习、看书。\n也有在关注疫情  10天火神山 习主席在北京亲自指挥、亲自部署 红十字会囤积口罩、发国难财 李文亮医生事件 8名肇事者被依法查处 陈秋实失联 方斌被抓 华春莹推特点赞“灭共、习近平下台”  关于疫情来源  有人说是吃蝙蝠、果子狸等野生动物 也有人说是美国投放病毒、不之前武汉军运会嘛，那会儿放的 还有人说是武汉p4研究室泄露  我个人更偏向于p4实验室泄露，因为有新闻揭露在18年武汉曾研究出SARS病毒、目前中国还不允许美国专家介入\u0026hellip;不管怎样，但愿抗体药物早点研制出来，实在不行等温度上升，病毒无法存活自然消失\n谈谈认知 早在19年12月31号，文昭先生曾发布武汉疑似非典病毒已在武汉蔓延\nhttps://www.youtube.com/watch?v=QIZLTGcWxsY\u0026amp;t=921s,\n那会并没有放在心上，按获取信息处理，事实并非如此，早该买口罩自用。\n为什么人家会有这样的消息，其实是收集民间消息，当然在我们国家从来都是报喜不报忧，等到忧无法掩盖时才暴露出来。很多隐藏消息只能通过科学上网来获取，至于真实性还得有自己的理性分析。\n在这堵墙的“保护”下，获取不到外面世界信息，我们的生活不就是像楚门一样么，所有信息被接收，真相被隐藏，只有权威人士知道，老百姓一直生活在襁褓里，或许这就是真相只存在少部分人之中。\n去年我在深圳工作，相邻对岸的香港“暴乱”真相信息也只能通过科学上网获取，而且我的一个vps服务器ip被ban掉，在不知道cdn能挽救回来情况下，只能重新换个ip。\n知道真相又怎样呢 是的，有的人知道真相，选择沉默，闷声发大财；有的人不想知道真相，生活依旧有滋有味；有的人无法知道真相，这就是现状。\n容易传递的是那些“很自然地就令人相信（感觉）是正确的”，而不是“事实上正确的”事情。\n最近在追《毒枭》第一季，为了利益，官场和黑道狼狈为奸，老百姓任由警察被割韭菜，就算有奇奇这类的好警察也无法改变现状，被权利压制。\n哪有什么岁月静好，有权利、有关系的，傻白甜静好\n如何改变现状 当下政权体质改变，民主投票选举，推翻赵家人专政，人民舆论自由。恐怕没那么容易，这会儿科学上网还是违法的呢，在我有生之年，墙能倒下就不错了。\n我们能做到的，做好自己，做个明白人，永远不要叫醒装睡的人。多科学上网获取第三方资讯对比，化被动为主动，不会可以学。\n最近统计我博客访问量，发现查看搭建trojan的剧增，还有网友打赏感谢的，这里再次谢谢你。\n自己科学上网部分经验分享，只给需要的人 买个vps服务器，搬瓦工或捋谷歌云（需外币信用卡，谷歌邮箱），一键脚本；购买第三方机场。\n目前ss、ssr基本已被墙识别，建议搭v2ray或trojan\n自建梯子节点，懂的人自然懂 v2ray:\n1  vmess://eyJhZGQiOiI5NTIyNDMyMTQueHl6IiwiYWlkIjoiMCIsImhvc3QiOiIiLCJpZCI6IjdmYTkyZDIwLWZmMTgtNGQ0Yy1iYTA5LWVjY2JhOTc4ODg2ZSIsIm5ldCI6IiIsInBhdGgiOiIiLCJwb3J0IjoiNDQzIiwicHMiOiI5NTIyNDMyMTQueHl6IiwidGxzIjoidGxzIiwidHlwZSI6Im5vbmUiLCJ2IjoiMiJ9   trojan:\n 域名:93jc.cn 端口:443 密码:bettermexin  这些节点都是搭在vps上面，不支持奈飞等流媒体观看，不出意外vps到期之前都可以免费用，个人用来备用，用的多的还是机场。\n第三方稳定机场推荐   FOO\u0026amp;FRIENDS.\n主要看中提供稀有节点，菲律宾、土耳其、巴西、阿根廷满足你各种使用场景，支持ssr和v2ray两种订阅，还有共享netflix账号套餐\n  xtunnel\n全v2ray中转节点，节点不是很多，但够用了，刚开张不久，最近7折优惠，便宜实惠\n  CNIX\n薯条，超级超级多的节点，\u0008多地区的节点支持且支持IPLC | IEPL 节点，推荐\n  aaex\n门槛超高型机场，主要提供bgp，iplc节点，现合并各大机场\n  推荐的机场都可以流畅性看4k（自己网络质量要好），都支持奈飞等流媒体观看\n最后，祝各位身体健康，吃嘛嘛香。\n","description":"对目前现状认知、探讨;科学上网节点分享","id":9,"section":"notes","tags":null,"title":"认知","uri":"https://betterme.xin/notes/2020-02/cognition/"},{"content":"什么是vim vim是vi的衍生版，目前最新版8.1，由布莱姆·米勒在1991年发布，文本编辑器，一般在类unix系统中使用。存在即合理，在计算机发展早期，将信息键入到计算机并没有鼠标和现在window系统这样的可视化界面（窗口可开关或缩小这样的），仅仅只是文字显示在显示器上，vi就是解决如何在这种环境中快速高效的键入文本或代码，类似的编辑器还有Emacs。更多关于vim请看官网或wiki\n为什么要使用vim 装逼，开玩笑怎么会呢。\n首先vim的出身是解决在无可视化系统上快速编辑，所以vim适用于在类unix系统上使用，是畅快使用类unix系统的一把利器，当然现在windows上和macOs上已经有了可视化vim编辑器。\nvim是运维工作者和使用类unix系统的必掌握工具之一。\n怎么入门呢 先摆正态度，不是为了学vim而学vim，而是学vim能快速的编辑文本，提升工作效率，更多时间来干其他的事情。如果学习vim并没有让你更轻松愉快，放弃吧，何必让自己难受。\nvim就是对文件操作，所以你还需要有linux基础，能在linux系统上切换目录，创建、删除、文件权限相关操作。\n好的，现在你还没走开，还有点兴趣。这个系列就是教你怎么入门，为什么不是精通，因为我不精通啊，本系列也只能教你入门，能使用vim进行简单的使用，也算是自己使用经验总结分享，take it easy，喝杯java压压惊。\n准备 在系统上安装上Ta，官网上寻找安装包，macOs内置vi，可用homebrew安装vimbrew install vim，windows上安装对应的版本vim。\n官方内置教程 安装好vim后，在控制台键入vimtutor + enter键即可进入\n先自己按着官方教程做，多实践，下篇文章将继续介绍vim入门相关，循序渐进，一步步来。\n","description":"vim从陌生到入门","id":10,"section":"posts","tags":["vim"],"title":"vim从陌生到入门","uri":"https://betterme.xin/posts/2019-12/vim/"},{"content":"剧情介绍 影片以小孩被检测画面开始，衣着单薄，还可以看到小 jj ，还有一群妇女被询问，为什么被检测、询问，发生了什么，给人以神秘感。\n接着一群小孩，拿着自制枪支，在街头巷道玩耍。想起自己童年时类似的游戏-打搏（具体不知道是哪两个字，发音倒是这样），几人一组成队，拿着自己用纸或竹签做成的手枪，\n在巷子里 “枪战”，谁先发现谁，说：\u0026ldquo;bo~，谁谁谁，你死了\u0026rdquo;，或者耍赖皮，谁谁都不说，直接说“bo~，你死了”，接着枪口对准被射击的人，最后哪个小队人还活到最后算哪队赢。集成躲猫猫还有枪战，通常一玩可以玩一下午，快乐的时光总是短暂的，偶尔被妈喊回家刨洋芋、烧火煮饭或吃晚饭，不舍悻悻回家收场。\n回到影片，接着画面变成小孩子带手铐，被一些大人带入法庭，小孩子要起诉自己的父母，因为他们生了我，what？！\n嗯，是的，这又是留下悬念，通用手法，百试不爽，好奇心害死猫，你继续看还是不看呢，还是看吧。\n时光穿梭回小孩一家人，在一个狭窄的房子里生活，家里七八个小孩，最小的还不能走路，最大的是姐姐，面貌像是西班牙剧《纸房子》里的内罗毕年少时，真漂亮！\n因为穷，读书的年龄没钱读书，迫于生计，穷人的孩子早当家，白天在街头卖果汁、接临时工活挣点钱维持生活开销。\n有一个片段给我印象最深刻，姐姐青春期，第三性征来小姨妈，小一岁的弟弟，也就是本影片主人公赞恩，教姐姐如何处理，帮洗内裤，自己衣服给姐姐，商店里偷卫生纸，如何处理卫生纸等等，真是太酷了，相比自己的年龄自己只知道玩。\n生活越来越难维持，家人把年仅11岁的姐姐卖了出嫁，弟弟有预料本想带姐姐离开家里，无奈自己力量体魄不大，姐姐强行被带走。自己出家在外，没钱吃饭，遇到一个善良拉希尔，她靠别人的身份证打工，还带着一个没断奶的儿子，赞恩帮她带孩子。有天拉希尔工作时被当地警察带走，赞恩不知情，靠自己把她儿子养着，机灵的他各种砸锅卖铁、自制“稀有物”卖赢君子，挣的钱想去偷渡去瑞士，偷渡需要身份证明，拉希尔的儿子卖给了当地杂货店老板，回到家找身份证明，不料发现自己姐姐已经死了，说时迟那时快，抄起一把刀去杀害死她姐姐的“丈夫”，嗯，没杀死只是受伤了，赞恩被带入监狱。\n在监狱里，赞恩靠给电视台的一个直播节目打电话，一个帮助儿童相关的节目，诉说自己遭遇，想起诉自己的父母，最后才有被带法庭。\n最后法庭判赞恩胜诉，拉希尔的儿子也找回来，赞恩自己有了真正的身份证明，还有那腼腆真实的笑容结尾。\n结尾 剧透完了，影片带给我什么呢。\n人各有命，你现在所不满的生活，或许正是别人所憧憬的生活。虽然电影有点夸张成分，并不是人人都是像赞恩一样，有机灵、勇敢，但都有很好的活着。\n类似的影片还有伊朗的电影《小鞋子》和韩国的《寄生虫》\n","description":"电影《何以为家》剧情介绍","id":11,"section":"notes","tags":["电影"],"title":"《何以为家》剧情介绍","uri":"https://betterme.xin/notes/2019-12/%E4%BD%95%E4%BB%A5%E4%B8%BA%E5%AE%B6/"},{"content":"Trojan介绍 Trojan-GFW作为一款新兴的代理软件，相比于L2TP,PPTP,OPENVPN等传统VPN以及SS,SSR,V2ray等主流代理软件，有着轻量化，配置简单，使用方便，速度更快等优势；听说前不久某研究学院破解了ss、ssr代理，真tm一群吃饱了没事干的家伙，以后科学上网更难，寻找备用科学上网方式很有必要。本文将简单介绍Trojan的搭建以及使用方式，不会介绍的很详细，关键点不会漏，点到为止:)\n项目地址:https://github.com/trojan-gfw/trojan\n实现原理图解\n搭建准备 根据实现原理，trojan监听443端口，再配合web服务器实现伪装，访问80端口重定向443端口，所以需要https证书，同时访问域名是正常的网站，避开GFW的检测，相对难检测到。接下来介绍具体搭建需要哪些。\n一台vps 搬瓦工、vultr、谷歌云、阿里云均可，但vps所在ip必须是非国内的，原因你懂得。\n域名 随便注册个便宜的域名即可，.xyz后缀的很便宜，一年一美元不到。提供几个可购买域名服务商:\n namecheap 美橙互联 阿里云  证书 方法一：去https://letsencrypt.org/免费申请证书，三个月后过期，可以脚本自动续期。\n方法二：如果域名在阿里云买的，可以免费申请一年的证书。\n看你自己情况选择，申请方法略，自己搜索相关教程，最终得到两个文件，.pem证书文件和.key密钥文件。将这个两个文件上传到vps目录下备用\n域名解析 将域名A记录解析到vps的ip上，每个服务商界面不一样，最终效果都是这样\n A www ip地址 这样访问域名带www，比如你的域名是betterme.xin，那么访问链接就是www.betterme.xin A @ ip地址 这样访问域名不带www，直接访问betterme.xin即可  开始搭建 下面展示在Debian 9 64位安装trojan。有很多一键脚本，我尝试过一个没成功，手动配置搭建成功了，所以主要分享手动搭建。\n搭建trojan服务  ssh工具连接上你的vps\n  安装Trojan-GFW\n  1 2  sudo apt-get update \u0026amp;\u0026amp; sudo apt-get upgrade -y \u0026amp;\u0026amp; sudo apt-get install xz-utils -y sudo bash -c \u0026#34;$(wget -O- https://raw.githubusercontent.com/trojan-gfw/trojan-quickstart/master/trojan-quickstart.sh)\u0026#34;   替换配置文件  1 2 3 4 5 6  sed -i \u0026#39;s/path/etc/g\u0026#39; /usr/local/etc/trojan/config.json sed -i \u0026#39;s/to/trojan/g\u0026#39; /usr/local/etc/trojan/config.json sed -i \u0026#39;s/certificate.crt/trojan.crt/g\u0026#39; /usr/local/etc/trojan/config.json sed -i \u0026#39;s/private.key/trojan.key/g\u0026#39; /usr/local/etc/trojan/config.json sed -i \u0026#39;s/password1/yourpasswd/g\u0026#39; /usr/local/etc/trojan/config.json sed -i \u0026#39;s/password2/yourpasswd/g\u0026#39; /usr/local/etc/trojan/config.json   修改配置文件  1  sudo vim /usr/local/etc/trojan/config.json   只需修改客户端连接密码和申请的域名证书文件，其他默认即可\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  { \u0026#34;run_type\u0026#34;: \u0026#34;server\u0026#34;, \u0026#34;local_addr\u0026#34;: \u0026#34;0.0.0.0\u0026#34;, \u0026#34;local_port\u0026#34;: 443, \u0026#34;remote_addr\u0026#34;: \u0026#34;127.0.0.1\u0026#34;, \u0026#34;remote_port\u0026#34;: 80, \u0026#34;password\u0026#34;: [ \u0026#34;password1\u0026#34;, //设置客户端连接密码，不支持特殊符号，可设置多个密码，用于多用户连接使用 \u0026#34;password2\u0026#34; ], \u0026#34;log_level\u0026#34;: 1, \u0026#34;ssl\u0026#34;: { \u0026#34;cert\u0026#34;: \u0026#34;/etc/trojan/trojan.crt\u0026#34;, //申请的证书路径.pem后缀文件或.crt后缀文件 \u0026#34;key\u0026#34;: \u0026#34;/etc/trojan/trojan.key\u0026#34;, //申请的密钥.key后缀文件 \u0026#34;key_password\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;cipher\u0026#34;: \u0026#34;ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256\u0026#34;, \u0026#34;prefer_server_cipher\u0026#34;: true, \u0026#34;alpn\u0026#34;: [ \u0026#34;http/1.1\u0026#34; ], \u0026#34;reuse_session\u0026#34;: true, \u0026#34;session_ticket\u0026#34;: false, \u0026#34;session_timeout\u0026#34;: 600, \u0026#34;plain_http_response\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;curves\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;dhparam\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;tcp\u0026#34;: { \u0026#34;prefer_ipv4\u0026#34;: false, \u0026#34;no_delay\u0026#34;: true, \u0026#34;keep_alive\u0026#34;: true, \u0026#34;fast_open\u0026#34;: false, \u0026#34;fast_open_qlen\u0026#34;: 20 }, \u0026#34;mysql\u0026#34;: { \u0026#34;enabled\u0026#34;: false, \u0026#34;server_addr\u0026#34;: \u0026#34;127.0.0.1\u0026#34;, \u0026#34;server_port\u0026#34;: 3306, \u0026#34;database\u0026#34;: \u0026#34;trojan\u0026#34;, \u0026#34;username\u0026#34;: \u0026#34;trojan\u0026#34;, \u0026#34;password\u0026#34;: \u0026#34;\u0026#34; } }   想了解更多参数配置，官方配置参考-\u0026gt;config\n开启并启用trojan服务  1 2  sudo systemctl start trojan sudo systemctl enable trojan   查看启用状态，可用于启动失败排错\n1  journalctl -e -u trojan.service   搭建nginx服务伪装https 安装nginx  1  sudo apt install nginx -y    修改配置文件  删除默认配置文件，只留conf.d目录下配置文件\n1 2 3 4 5  sudo rm -rf /etc/nginx/sites-available/ sudo rm -rf /etc/nginx/sites-enabled/ sudo rm -rf /etc/nginx/conf.d/default.conf sudo touch /etc/nginx/conf.d/trojan.conf sudo vim /etc/nginx/conf.d/trojan.conf   trojan.conf，修改时注意每句结尾的分号别漏了\nserver { listen 127.0.0.1:80; #放在Trojan后面即可做伪装也可以是真正的网站 server_name example.com; # 申请的域名，例如betterme.xin www.betterme.xin location / { # 这里可以反向代理自己另外一个网站，比如 proxy_pass https://betterme.xin; root /usr/share/nginx/html/; #默认的根目录 index index.html; #默认的html文件 } add_header Strict-Transport-Security \u0026quot;max-age=63072000; includeSubDomains; preload\u0026quot; always; #HSTS标头 } server { listen 80; listen [::]:80; server_name example.com; return 301 https://example.com; #301 https重定向 } server { listen 80 default_server; listen [::]:80 default_server; server_name _; return 444; } 检测配置文件是否正确，错误请修改正确。\n1  nginx -t   软启动nginx\n1  nginx -s reload   这样访问自己的域名就正常了。\n选装bbrplus并禁用TCP慢启动提高吞吐量以及加快连接建立 使用一键脚本\n1 2 3  wget -N --no-check-certificate \u0026#34;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh\u0026#34; chmod +x tcp.sh ./tcp.sh   TCP加速 一键安装管理脚本 [v1.3.2]\n\u0026ndash; 就是爱生活 | 94ish.me \u0026ndash;\n升级脚本\n————————————内核管理———————————— 安装 BBR/BBR魔改版内核 安装 BBRplus版内核 安装 Lotserver(锐速)内核\n————————————加速管理———————————— 使用BBR加速 使用BBR魔改版加速 使用暴力BBR魔改版加速(不支持部分系统) 使用BBRplus版加速 使用Lotserver(锐速)加速\n————————————杂项管理———————————— 卸载全部加速 系统配置优化 退出脚本\n————————————————————————————————  选择2 enter，当提示是否卸载内核时，选择[否/no]，安装后重启，登录vps后，再执行一次./tcp.sh 选择7启用bbr plus\n查看是否启用成功\nsudo sysctl -p\n当显示\nnet.ipv4.tcp_congestion_control = bbrplus表示启用bbrplus成功\n选装dns缓存配置 备份原有配置文件、自己新建\n1 2 3  sudo apt-get install dnsmasq -y sudo mv /etc/dnsmasq.conf /etc/dnsmasq.conf.bak sudo touch /etc/dnsmasq.conf   监听本机\nsudo echo \u0026quot;port=53\u0026quot; \u0026gt;\u0026gt; /etc/dnsmasq.conf sudo echo \u0026quot;no-resolv\u0026quot; \u0026gt;\u0026gt; /etc/dnsmasq.conf sudo echo \u0026quot;server=1.1.1.1#53\u0026quot; \u0026gt;\u0026gt; /etc/dnsmasq.conf sudo echo \u0026quot;interface=lo\u0026quot; \u0026gt;\u0026gt; /etc/dnsmasq.conf sudo echo \u0026quot;listen-address=127.0.0.1\u0026quot; \u0026gt;\u0026gt; /etc/dnsmasq.conf sudo echo \u0026quot;cache-size=1000\u0026quot; \u0026gt;\u0026gt; /etc/dnsmasq.conf 设定系统dns服务器为本机\nchattr -i /etc/resolv.conf \u0026amp;\u0026amp; echo \u0026quot;nameserver 127.0.0.1\u0026quot; \u0026gt; /etc/resolv.conf \u0026amp;\u0026amp; chattr +i /etc/resolv.conf 开启服务并查看启动状态\n1 2  sudo systemctl restart dnsmasq sudo systemctl status dnsmasq   呼耶，服务端已经安装完毕，接下来就等客户端连接使用咯。\n客户端连接使用 由于该科学上网还比较新颖，目前适配的客户端还不够齐全。\n电脑上，不管是window还是macOs,都是先下载客户端服务，让Ta在控制台后台运行，然后再在谷歌浏览器安装SwitchyOmega插件配合使用\n手机端，安卓有igniter,仅支持全局代理，功能比较单一，安装后输入域名和密码点击连接即可\n苹果设备，shadowroket支持trojan，简单配置域名，端口443，连接密码即可\n注意，当我连接时，域名带了https://，这样是连接不上的，只需域名，比如申请的域名是betterme.xin，那么请填写betterme.xin，密码是服务端配置的某一个密码\n自己vps线路的质量好坏决定了上网体验，如果没有特殊需求，看youtube，1080p完全没问题。\n另外分享自己刚搭建的链接，拿去用吧，访问域名做了反向代理，访问https://93jc.cn会显示本博客首页\n本人亲自测试，电信200M，看youtube 4k60帧\n 域名:93jc.cn 端口:443 密码:||||小|额|打|赏|可|见|||  Attention!!! 打赏的电报或邮箱联系告知密码，告知打赏来源，或者探索网站其他文章，有惊喜哟:) 参考链接  Trojan-GFW \u0026ndash;一把通往自由互联网世界的万能钥匙 自建梯子教程 \u0026ndash;Trojan版本  ","description":"介绍搭建新型科学上网工具及使用","id":12,"section":"posts","tags":["Trojan"],"title":"Trojan从搭建到使用","uri":"https://betterme.xin/posts/2019-12/trojan/"},{"content":"《婚姻故事》这部影片由获得奥斯卡奖提名的电影制作人诺亚·鲍姆巴赫执导，深刻而富有同情心地审视了一段瓦解的婚姻和一个团结凝聚的家庭。\n一家人，丈夫、妻子还有一个小孩。\n大人都是演员、我是说真实上台表演的演员。过日子，妻子越来越不满丈夫、找不到自己，忍无可忍然后和丈夫闹离婚，事态不断僵化，最后找律师，上法庭。\n最终婚应该还是离了，但是彼此还是深爱着对方和孩子\n全电影最精彩的地方莫属1:31~1:40，在这9分钟里，两人互相撕逼，说出结婚以来，一直压在自己心里没对对方说的话。\n争吵大战由女方开始以丈夫像他自己父亲一样（丈夫讨厌他父亲）为导火线，接着丈夫反过去说像她像自己母亲一样（妻子讨厌她母亲）。然后来回好多回合，balaba\u0026hellip;\n过日子嘛，夫妻双方肯定存在有不满对方的，若都压在心里不说出去，默默承受，这样其实并不好，多沟通少些压抑多些共鸣，适当发泄。\n虽然我还没结婚，还没女朋友，但是这种思想还是可以有😅\n","description":"《婚姻故事》这部影片由获得奥斯卡奖提名的电影制作人诺亚·鲍姆巴赫执导，深刻而富有同情心地审视了一段瓦解的婚姻和一个团结凝聚的家庭。","id":13,"section":"notes","tags":["电影"],"title":"《婚姻故事》剧情介绍","uri":"https://betterme.xin/notes/2019-12/married_family/"},{"content":"spotify最近出了2019年听歌总结，分享我在2019年使用spotify听的音乐，虽然没用spotify多久。\n ","description":"","id":14,"section":"notes","tags":[""],"title":"SpotifyWrapped","uri":"https://betterme.xin/notes/2019-12/spotifywrapped2019/"},{"content":"0.知识或者技能这种东西，学到了就跟你一辈子\n1.我们养成习惯，然后习惯养成我们\n2.吸星大法（围剿式学习）：通过观察对方的沟通、演讲、写作方式，从而学习他们的思维方式、学习他们身上最优秀的思维方式。\n3.真诚和诚信有多么重要，真诚是领导力的真谛，诚信是商业的真谛，每个人的年薪、领导能力、商业成就全部都可以从这两个词汇里诠释\n4.父母逼近死亡，能满足他们想要的，不管大小，尽量去满足\n5.睡眠其实真正决定了生命的效率\n6.保持自我，并不断变得更好。\n7.刻意发现生活的美，发现细微的不同，会给自己带来很多小惊喜\n","description":"","id":15,"section":"notes","tags":[""],"title":"逼近26岁，25岁时记的话","uri":"https://betterme.xin/notes/2019-12/note2/"},{"content":"当你使用科学上网后，就可以看youtube，如果你不想在看视频的时候冒出广告打断你，可以尝试订阅YouTube Premium，单独买就很贵，电报合租群可以合租，一年40-50rmb左右。另外还有很多服务都可以合租，spotify\n、Adguard、HBO GO 、appletv+、amazon prime video、surge iOS、1password、office365、Disney+，甚至还有pornhub\n下面是个人订阅的部分youtube频道推荐，至于是哪些类型，自己看看就知道咯\n 李永乐老师 老高與小茉 Mr \u0026amp; Mrs Gao BIGDONGDONG She\u0026rsquo;s Danni -Wen Zhao Official文昭談古論今 The Daily Dropout  ","description":"","id":16,"section":"notes","tags":["youtube"],"title":"youtube订阅推荐","uri":"https://betterme.xin/notes/youtube_share/"},{"content":"netflix是什么 netflix中文名奈飞、网飞，是国外流媒体平台，提供在线看美剧、韩剧、日剧、动漫、电影、电视节目等。\n按月订阅，最高套餐支持一个账号4个人同时看4k。\n观看时，根据用户网络质量自动调节画面质量，可切换字幕。\n目前不支持在中国观看。\n片源  美区\n资源：约 4000部电影，1600部电视剧。数据2018年8月更新，每月都有变动，下同。\n字幕：仅 Netflix 原创剧集有中文字幕，大部分剧没有中文字幕。 港区\n资源：约 2000部电影，1000部电视剧。\n字幕：基本都有中文字幕。 日区\n资源：约5000部电影，1400部电视剧。\n字幕：基本没有中文字幕。 新加坡\n资源：约2400部电影，1200部电视剧。\n字幕：基本都有中文字幕。  更多关于 Netflix 各区的影视资源和订阅价格可以查看这个网站。\n为什么要看奈飞 Unlimited movies, TV shows, and more.Watch anywhere. Cancel anytime.\n无广告，界面优雅，收一次费全平台提供都可看，不像国内，会员了还另外收费。原版无删减片源，在netflix买了版权的前提下，美剧，韩剧，日剧，动漫，好莱坞电影应有尽有\u0026hellip;\n同时根据观看的历史记录，官网Ai智能推荐片子\n支持手机、电视、ipad多端观看。免去找资源、下载的烦恼，还比国内媒体分享的早看到。\n重点，怎样才能免费看奈飞呢 网络支持  自己良好的网络环境。如果你在国内，那么需要科学上网工具了。比较简单的方式是买服务，买支持观看奈飞的科学上网服务；\n或者自己搭，但是很多vps一般都被奈飞封ip不给看，像搬瓦工、vultr。但谷歌云、阿里云国际有些支持，搭建教程略。我目前有买服务和谷歌云送的一年300美金搭的香港节点，\n服务是aaex(需代理)，若你要买的话，按照自己实际需求，偶尔看，套餐一即可，一年100元以内。\n遗憾的是，这篇文章发布错过了他们商店双十一打折，不然还能便宜点。 在国外且奈飞支持观看的国家不需要科学上网工具  外币信用卡 我目前使用的中信银行万事达双币信用卡，招商visa也可以。最近很难绑定成功，尝试换注册区绑定。\n奈飞账号 再解释下两个关键词\n 奈飞账号\n用来登录奈飞，并订阅套餐用的，扣费仅仅与账号订阅套餐时的国家ip有关 片源\n登录奈飞账号时的ip所在国家决定了片源，见上。但建议账号使用者尽量都用同一个区的ip观看，防止netflix检测到共享账号套餐而被封号。  去官网注册汇率较低的国家地区账号、目前（2019年）是土耳其和阿根廷，方法是科学上网挂土耳其的ip，注册即可，但是需要土耳其手机号接收短信验证码。没有怎么办，尝试注册阿根廷区的账号，注意换ip后，清理浏览器cookie。\n实在找不到土耳其或阿根廷的节点，使用香港的注册订阅吧，注意订阅后立即扣费，有时候有免费试用一个月，见官网说明，然后取消订阅，再招人合租，合租见下方说明。订阅到期后，再挂土耳其ip，重新订阅，那么下个扣费周期就按土耳其的汇率来算，阿根廷区同理。\n免费机制 电报群找人合租，找群主提交资料申请开车，按最高套餐土耳其价格41.99 TL，折合人民币53-55人民币左右。\n账号默认4个成人用户，还有个儿童账户，把儿童账户改成成人用户，就是5个账户，再找四个人，四个人每人一个月￥15，4x15=60 \u0026gt; 55，所以免费了,还能赚几块🤓。我还算良心，收的￥14一个月。\n不用担心找不到人，上车的人比开车的人多，只要合租通知一发出，不到半个小时，4个人全找到了。接下来自己管理成员收费、建议最低季付，三个月的收，自己按时还信用卡即可，经常使用还有助于提额。\n隐私安全问题 登录账号是同一个，密码共享，登录成功后选择子账户，各个子账号相互隔离独立。\n 都能看到注册手机号，手机号是用来修改密码接收短信验证码的。建议手机号修改成Google Voice（gv号），电报群有卖，按照号码靓度14-100rmb不等,传送门-\u0026gt;\n购买gv号群1，购买gv号群2 信用卡被盗刷，无需担心，只能看到信用卡后四位，安全码也看不到，除了更换信用卡，需要填写，但更换信用卡就是按新的信用卡扣费，除了您本人谁还会这么干。  总结 所以想要免费观看奈飞其实并不麻烦、一个科学上网服务、外币信用卡、一点点耐心。\n唯一需要花钱的地方就是科学上网服务，也可以不花钱，使用vps自己搭建、考验你动手能力，也需要外币信用卡和gv号，一些简单的linux命令。\n后续看情况再写一些相关教程吧。\n本人免费分享谷歌云香港节点，如有需要，call me maybe.还有什么问题的，也可以联系我，尽管问，反正我也不一定帮😅\n最后实在嫌麻烦，自己找车上车，一月￥15左右，然后自备梯子也可以观看奈飞，只是多花钱少麻烦个。\n另外分享其他比较好的观影网站\n novipnoad正如网站域名表达含义，no vip、no ad，无需会员还没广告，提供最新电影、美剧在线观看 人人影视，美剧观影者的福音，可惜需要先下载后再观看  其他参考  礼品卡 实体/虚拟卡片，可直接向账号充值抵扣订阅费，比扣信用卡的费用稍稍便宜点 在中国看 Netflix（网飞），看这一篇就够了 需科学上网 电报使用 后续教程或自己搜索相关介绍  ","description":"本文将分享观看奈飞的一些经验","id":17,"section":"posts","tags":["netflix",""],"title":"如何免费使用Netflix","uri":"https://betterme.xin/posts/2019-12/free_use_netflix/"},{"content":"hello world 我又回来了。\n现已开启在hugo上写博客，自己曾有过博客系统，上面的文章也只是自己当笔记偶尔看看，\n但是界面写的不美观，很少做优化，也没什么人看，遗弃之。\n后来使用Trilium Notes搭了个记笔记的，统一管理，所有笔记都转上面，还行。\n为什么选择hugo go语言编写，静态页面生成利器，无需数据库，无需后台，丰富的主题可供选择，所有文档都是自己整理，保存同步到github即可\n","description":"hello world","id":18,"section":"posts","tags":[""],"title":"I'm back!","uri":"https://betterme.xin/posts/2019-12/helloworld/"}]